//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.8.0.0 (Newtonsoft.Json v12.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace MyNamespace
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class OrderHeader
    {
        [Newtonsoft.Json.JsonProperty("SoldToID", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string SoldToID { get; set; }

        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("BillingAddressID", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string BillingAddressID { get; set; }

        [Newtonsoft.Json.JsonProperty("SubTotal", Required = Newtonsoft.Json.Required.Always)]
        public double SubTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("OMSShippingTotal", Required = Newtonsoft.Json.Required.Always)]
        public double OMSShippingTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("OMSDeliveryFeeTotal", Required = Newtonsoft.Json.Required.Always)]
        public double OMSDeliveryFeeTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("HandlingTotal", Required = Newtonsoft.Json.Required.Always)]
        public double HandlingTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("TaxTotal", Required = Newtonsoft.Json.Required.Always)]
        public double TaxTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("Total", Required = Newtonsoft.Json.Required.Always)]
        public double Total { get; set; }

        [Newtonsoft.Json.JsonProperty("Created", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Created { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderID", Required = Newtonsoft.Json.Required.Always)]
        public int OrderID { get; set; }

        [Newtonsoft.Json.JsonProperty("MemberNo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MemberNo { get; set; }

        [Newtonsoft.Json.JsonProperty("UpchargeTotal", Required = Newtonsoft.Json.Required.Always)]
        public double UpchargeTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("WarehouseNo", Required = Newtonsoft.Json.Required.Always)]
        public int WarehouseNo { get; set; }

        [Newtonsoft.Json.JsonProperty("KioskWhs", Required = Newtonsoft.Json.Required.Always)]
        public int KioskWhs { get; set; }

        [Newtonsoft.Json.JsonProperty("IsResale", Required = Newtonsoft.Json.Required.Always)]
        public bool IsResale { get; set; }

        [Newtonsoft.Json.JsonProperty("ResaleLicense", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ResaleLicense { get; set; }

        [Newtonsoft.Json.JsonProperty("IPAddress", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IPAddress { get; set; }

        [Newtonsoft.Json.JsonProperty("LanguagePreference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LanguagePreference { get; set; }

        [Newtonsoft.Json.JsonProperty("GSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double GSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("HSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double HSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("PSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double PSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("QSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double QSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("FSAPayment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FSAPayment { get; set; }

        [Newtonsoft.Json.JsonProperty("IsMailOrder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string IsMailOrder { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderSubTypeId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int OrderSubTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("DeviceIndicator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DeviceIndicator { get; set; }

        [Newtonsoft.Json.JsonProperty("LoginTimestamp", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset LoginTimestamp { get; set; }

        [Newtonsoft.Json.JsonProperty("SourceSystem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SourceSystem { get; set; }

        [Newtonsoft.Json.JsonProperty("PartnerOrderReference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PartnerOrderReference { get; set; }

        [Newtonsoft.Json.JsonProperty("SalesChannelID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SalesChannelID { get; set; }

        [Newtonsoft.Json.JsonProperty("AeroplanNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AeroplanNumber { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SalesChannel
    {
        [Newtonsoft.Json.JsonProperty("CatalogId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CatalogId { get; set; }

        [Newtonsoft.Json.JsonProperty("ProgramType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ProgramType { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class OrderDetail
    {
        [Newtonsoft.Json.JsonProperty("WarehouseNo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int WarehouseNo { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int OrderId { get; set; }

        [Newtonsoft.Json.JsonProperty("LineItemID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LineItemID { get; set; }

        [Newtonsoft.Json.JsonProperty("Quantity", Required = Newtonsoft.Json.Required.Always)]
        public int Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("PlacedPrice", Required = Newtonsoft.Json.Required.Always)]
        public double PlacedPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("ListPrice", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double ListPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("LineItemDiscountAmount", Required = Newtonsoft.Json.Required.Always)]
        public double LineItemDiscountAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderLevelDiscountAmount", Required = Newtonsoft.Json.Required.Always)]
        public double OrderLevelDiscountAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("ShippingAddressID", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ShippingAddressID { get; set; }

        [Newtonsoft.Json.JsonProperty("ShippingMethodName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ShippingMethodName { get; set; }

        [Newtonsoft.Json.JsonProperty("ExtendedPrice", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double ExtendedPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("SequenceNo", Required = Newtonsoft.Json.Required.Always)]
        public int SequenceNo { get; set; }

        [Newtonsoft.Json.JsonProperty("ItemNo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ItemNo { get; set; }

        [Newtonsoft.Json.JsonProperty("ItemType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ItemType { get; set; }

        [Newtonsoft.Json.JsonProperty("TaxCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string TaxCode { get; set; }

        [Newtonsoft.Json.JsonProperty("TaxAmount", Required = Newtonsoft.Json.Required.Always)]
        public double TaxAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("OMSShipAmount", Required = Newtonsoft.Json.Required.Always)]
        public double OMSShipAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("OMSDeliveryFee", Required = Newtonsoft.Json.Required.Always)]
        public double OMSDeliveryFee { get; set; }

        [Newtonsoft.Json.JsonProperty("Upcharge", Required = Newtonsoft.Json.Required.Always)]
        public double Upcharge { get; set; }

        [Newtonsoft.Json.JsonProperty("HandlingFee", Required = Newtonsoft.Json.Required.Always)]
        public double HandlingFee { get; set; }

        [Newtonsoft.Json.JsonProperty("TransTaxedGeoFlag", Required = Newtonsoft.Json.Required.Always)]
        public int TransTaxedGeoFlag { get; set; }

        [Newtonsoft.Json.JsonProperty("TransCombRate", Required = Newtonsoft.Json.Required.Always)]
        public double TransCombRate { get; set; }

        [Newtonsoft.Json.JsonProperty("ShipFromJurisGeo", Required = Newtonsoft.Json.Required.Always)]
        public int ShipFromJurisGeo { get; set; }

        [Newtonsoft.Json.JsonProperty("DetailShipAcceptJurisGeo", Required = Newtonsoft.Json.Required.Always)]
        public int DetailShipAcceptJurisGeo { get; set; }

        [Newtonsoft.Json.JsonProperty("ShipCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ShipCode { get; set; }

        [Newtonsoft.Json.JsonProperty("CarrierCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CarrierCode { get; set; }

        [Newtonsoft.Json.JsonProperty("ConfigID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ConfigID { get; set; }

        [Newtonsoft.Json.JsonProperty("IsResale", Required = Newtonsoft.Json.Required.Always)]
        public bool IsResale { get; set; }

        [Newtonsoft.Json.JsonProperty("PickWarehouseNo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int PickWarehouseNo { get; set; }

        [Newtonsoft.Json.JsonProperty("ParentLineItemID", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ParentLineItemID { get; set; }

        [Newtonsoft.Json.JsonProperty("GSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double GSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("HSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double HSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("PSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double PSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("QSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double QSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("ShippingTaxTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double ShippingTaxTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("ShippingGSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double ShippingGSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("ShippingHSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double ShippingHSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("ShippingPSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double ShippingPSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("ShippingQSTTotal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double ShippingQSTTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("AS400ShipCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AS400ShipCode { get; set; }

        [Newtonsoft.Json.JsonProperty("PreferredArrivalDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset PreferredArrivalDate { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderPaymentID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OrderPaymentID { get; set; }

        [Newtonsoft.Json.JsonProperty("ConfigXml", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ConfigXml { get; set; }

        [Newtonsoft.Json.JsonProperty("PlainPackaging", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool PlainPackaging { get; set; }

        [Newtonsoft.Json.JsonProperty("CanGroupForShipping", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CanGroupForShipping { get; set; }

        [Newtonsoft.Json.JsonProperty("ShipToWarehouse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int ShipToWarehouse { get; set; }

        [Newtonsoft.Json.JsonProperty("SMSPhone", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SMSPhone { get; set; }

        [Newtonsoft.Json.JsonProperty("PartnerLineReference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PartnerLineReference { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OrderStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("MinOrderDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset MinOrderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("MaxOrderDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset MaxOrderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("SalesChannel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SalesChannel SalesChannel { get; set; }

        [Newtonsoft.Json.JsonProperty("EstimatedDeliveryDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset EstimatedDeliveryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("ImageURL", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ImageURL { get; set; }

        [Newtonsoft.Json.JsonProperty("ScheduledDeliveryDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset ScheduledDeliveryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("ScheduledDeliveryDateEnd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset ScheduledDeliveryDateEnd { get; set; }

        [Newtonsoft.Json.JsonProperty("EarliestAvailableCalendarDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset EarliestAvailableCalendarDate { get; set; }

        [Newtonsoft.Json.JsonProperty("SupplierAvailabilityDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset SupplierAvailabilityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("FulfilledBy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FulfilledBy { get; set; }

        [Newtonsoft.Json.JsonProperty("EDDRequestTransactionId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string EDDRequestTransactionId { get; set; }

        [Newtonsoft.Json.JsonProperty("FulfillmentcentercompanyID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int FulfillmentcentercompanyID { get; set; }

        [Newtonsoft.Json.JsonProperty("BOFirstShipDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset BOFirstShipDate { get; set; }

        [Newtonsoft.Json.JsonProperty("BOLastShipDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset BOLastShipDate { get; set; }

        [Newtonsoft.Json.JsonProperty("BOAvailableToSellDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset BOAvailableToSellDate { get; set; }

        [Newtonsoft.Json.JsonProperty("BackorderType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string BackorderType { get; set; }

        [Newtonsoft.Json.JsonProperty("BOTypeDescription", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string BOTypeDescription { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class OrderDiscount
    {
        [Newtonsoft.Json.JsonProperty("LineItemID", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string LineItemID { get; set; }

        [Newtonsoft.Json.JsonProperty("Priority", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Priority { get; set; }

        [Newtonsoft.Json.JsonProperty("DiscountAmount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double DiscountAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("DiscountType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DiscountType { get; set; }

        [Newtonsoft.Json.JsonProperty("DiscountValue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double DiscountValue { get; set; }

        [Newtonsoft.Json.JsonProperty("DiscountName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DiscountName { get; set; }

        [Newtonsoft.Json.JsonProperty("PromoCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PromoCode { get; set; }

        [Newtonsoft.Json.JsonProperty("IsPreTaxDiscount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool IsPreTaxDiscount { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class Agreement
    {
        [Newtonsoft.Json.JsonProperty("Id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class OrderPayment
    {
        [Newtonsoft.Json.JsonProperty("SequenceNo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int SequenceNo { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderPaymentID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OrderPaymentID { get; set; }

        [Newtonsoft.Json.JsonProperty("PayTypeCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string PayTypeCode { get; set; }

        [Newtonsoft.Json.JsonProperty("PayTypeName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PayTypeName { get; set; }

        [Newtonsoft.Json.JsonProperty("Number", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Number { get; set; }

        [Newtonsoft.Json.JsonProperty("IsNumberEncrypted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int IsNumberEncrypted { get; set; }

        [Newtonsoft.Json.JsonProperty("ExpMonth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int ExpMonth { get; set; }

        [Newtonsoft.Json.JsonProperty("ExpYear", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int ExpYear { get; set; }

        [Newtonsoft.Json.JsonProperty("CVV2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CVV2 { get; set; }

        [Newtonsoft.Json.JsonProperty("Pin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Pin { get; set; }

        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Always)]
        public double Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("RoutingNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RoutingNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("BankName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string BankName { get; set; }

        [Newtonsoft.Json.JsonProperty("CheckNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CheckNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("BankAccountTypeCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string BankAccountTypeCode { get; set; }

        [Newtonsoft.Json.JsonProperty("IsFSAPayment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool IsFSAPayment { get; set; }

        [Newtonsoft.Json.JsonProperty("EPRAccountUserID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string EPRAccountUserID { get; set; }

        [Newtonsoft.Json.JsonProperty("EPRPaymentAccountID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string EPRPaymentAccountID { get; set; }

        [Newtonsoft.Json.JsonProperty("SessionID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SessionID { get; set; }

        [Newtonsoft.Json.JsonProperty("CardIdentification", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CardIdentification { get; set; }

        [Newtonsoft.Json.JsonProperty("AuthenticationTransactionId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object AuthenticationTransactionId { get; set; }

        [Newtonsoft.Json.JsonProperty("LineOfBusiness", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object LineOfBusiness { get; set; }

        [Newtonsoft.Json.JsonProperty("Agreement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Agreement Agreement { get; set; }

        [Newtonsoft.Json.JsonProperty("EciIndicator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int EciIndicator { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class OrderAddress
    {
        [Newtonsoft.Json.JsonProperty("OrderAddressID", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string OrderAddressID { get; set; }

        [Newtonsoft.Json.JsonProperty("FirstName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string FirstName { get; set; }

        [Newtonsoft.Json.JsonProperty("LastName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string LastName { get; set; }

        [Newtonsoft.Json.JsonProperty("Organization", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Organization { get; set; }

        [Newtonsoft.Json.JsonProperty("Line1", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Line1 { get; set; }

        [Newtonsoft.Json.JsonProperty("Line2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Line2 { get; set; }

        [Newtonsoft.Json.JsonProperty("Line3", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Line3 { get; set; }

        [Newtonsoft.Json.JsonProperty("City", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string City { get; set; }

        [Newtonsoft.Json.JsonProperty("State", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string State { get; set; }

        [Newtonsoft.Json.JsonProperty("Country", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Country { get; set; }

        [Newtonsoft.Json.JsonProperty("CountryName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CountryName { get; set; }

        [Newtonsoft.Json.JsonProperty("PostalCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string PostalCode { get; set; }

        [Newtonsoft.Json.JsonProperty("RegionCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RegionCode { get; set; }

        [Newtonsoft.Json.JsonProperty("RegionName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RegionName { get; set; }

        [Newtonsoft.Json.JsonProperty("DaytimePhoneNumber", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DaytimePhoneNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("EveningPhoneNumber", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string EveningPhoneNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("FaxNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FaxNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Email { get; set; }

        [Newtonsoft.Json.JsonProperty("CustomerNo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int CustomerNo { get; set; }

        [Newtonsoft.Json.JsonProperty("ContactInfo", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ContactInfo { get; set; }

        [Newtonsoft.Json.JsonProperty("ContactPhone", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ContactPhone { get; set; }

        [Newtonsoft.Json.JsonProperty("County", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string County { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderAcceptJurisGeo", Required = Newtonsoft.Json.Required.Always)]
        public int OrderAcceptJurisGeo { get; set; }

        [Newtonsoft.Json.JsonProperty("ShipToJurisGeo", Required = Newtonsoft.Json.Required.Always)]
        public int ShipToJurisGeo { get; set; }

        [Newtonsoft.Json.JsonProperty("ShipTransTotalTax", Required = Newtonsoft.Json.Required.Always)]
        public double ShipTransTotalTax { get; set; }

        [Newtonsoft.Json.JsonProperty("RequestedShipDate", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset RequestedShipDate { get; set; }

        [Newtonsoft.Json.JsonProperty("DeliveryComment", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DeliveryComment { get; set; }

        [Newtonsoft.Json.JsonProperty("IsOverride", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool IsOverride { get; set; }

        [Newtonsoft.Json.JsonProperty("MFLFlag", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool MFLFlag { get; set; }

        [Newtonsoft.Json.JsonProperty("RDI", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string RDI { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class OrderGiftMessage
    {
        [Newtonsoft.Json.JsonProperty("ToFirstName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ToFirstName { get; set; }

        [Newtonsoft.Json.JsonProperty("ToLastName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string ToLastName { get; set; }

        [Newtonsoft.Json.JsonProperty("FromName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string FromName { get; set; }

        [Newtonsoft.Json.JsonProperty("Message", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Message { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderShippingAddressID", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string OrderShippingAddressID { get; set; }

        [Newtonsoft.Json.JsonProperty("SendWithoutMessage", Required = Newtonsoft.Json.Required.Always)]
        public bool SendWithoutMessage { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class OrderPaymentAuthorization
    {
        [Newtonsoft.Json.JsonProperty("OrderPaymentID", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string OrderPaymentID { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderCorrelationID", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OrderCorrelationID { get; set; }

        [Newtonsoft.Json.JsonProperty("MethodOfPayment", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string MethodOfPayment { get; set; }

        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExpirationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("ResponseDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ResponseDate { get; set; }

        [Newtonsoft.Json.JsonProperty("ResponseReasonCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ResponseReasonCode { get; set; }

        [Newtonsoft.Json.JsonProperty("AuthorizationCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AuthorizationCode { get; set; }

        [Newtonsoft.Json.JsonProperty("AVSResponseCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AVSResponseCode { get; set; }

        [Newtonsoft.Json.JsonProperty("CSVResponseCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CSVResponseCode { get; set; }

        [Newtonsoft.Json.JsonProperty("CAVVResponseCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CAVVResponseCode { get; set; }

        [Newtonsoft.Json.JsonProperty("UseThisForSettlement", Required = Newtonsoft.Json.Required.Always)]
        public int UseThisForSettlement { get; set; }

        [Newtonsoft.Json.JsonProperty("FSAPayment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int FSAPayment { get; set; }

        [Newtonsoft.Json.JsonProperty("AttemptNumber", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AttemptNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("DateTime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("MaxRetriesAllowed", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MaxRetriesAllowed { get; set; }

        [Newtonsoft.Json.JsonProperty("ReasonForNoAuth", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ReasonForNoAuth { get; set; }

        [Newtonsoft.Json.JsonProperty("ChangeDataMask", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ChangeDataMask { get; set; }

        [Newtonsoft.Json.JsonProperty("BMLItemCategoryCode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string BMLItemCategoryCode { get; set; }

        [Newtonsoft.Json.JsonProperty("CardTransactionIdentifier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CardTransactionIdentifier { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class OrderFraudCheck
    {
        [Newtonsoft.Json.JsonProperty("TransactionId", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string TransactionId { get; set; }

        [Newtonsoft.Json.JsonProperty("CrossReference", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string CrossReference { get; set; }

        [Newtonsoft.Json.JsonProperty("RulesTripped", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RulesTripped { get; set; }

        [Newtonsoft.Json.JsonProperty("TotalScore", Required = Newtonsoft.Json.Required.Always)]
        public int TotalScore { get; set; }

        [Newtonsoft.Json.JsonProperty("RecommendationCode", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string RecommendationCode { get; set; }

        [Newtonsoft.Json.JsonProperty("Remarks", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Remarks { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class DigitalFulfillmentRequest
    {
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Status { get; set; }

        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Description { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class WebOrder
    {
        [Newtonsoft.Json.JsonProperty("OrderHeader", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public OrderHeader OrderHeader { get; set; } = new OrderHeader();

        [Newtonsoft.Json.JsonProperty("OrderDetail", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<OrderDetail> OrderDetail { get; set; } = new System.Collections.ObjectModel.Collection<OrderDetail>();

        [Newtonsoft.Json.JsonProperty("OrderDiscount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<OrderDiscount> OrderDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderPayment", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<OrderPayment> OrderPayment { get; set; } = new System.Collections.ObjectModel.Collection<OrderPayment>();

        [Newtonsoft.Json.JsonProperty("OrderAddress", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(2)]
        public System.Collections.Generic.ICollection<OrderAddress> OrderAddress { get; set; } = new System.Collections.ObjectModel.Collection<OrderAddress>();

        [Newtonsoft.Json.JsonProperty("OrderGiftMessage", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<OrderGiftMessage> OrderGiftMessage { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderPaymentAuthorization", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<OrderPaymentAuthorization> OrderPaymentAuthorization { get; set; }

        [Newtonsoft.Json.JsonProperty("OrderFraudCheck", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public OrderFraudCheck OrderFraudCheck { get; set; }

        [Newtonsoft.Json.JsonProperty("DigitalFulfillmentRequest", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DigitalFulfillmentRequest DigitalFulfillmentRequest { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class Json
    {
        [Newtonsoft.Json.JsonProperty("WebOrder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public WebOrder WebOrder { get; set; }

        [Newtonsoft.Json.JsonProperty("AuthenticationTransactionId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AuthenticationTransactionId { get; set; }

        [Newtonsoft.Json.JsonProperty("LineOfBusiness", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LineOfBusiness { get; set; }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v12.0.0.0)")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }
}